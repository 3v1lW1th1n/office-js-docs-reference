### YamlMime:UniversalReference
items:
  - uid: office.Excel_BindingCollection
    summary: |-
      Represents the collection of all the binding objects that are part of the workbook. 

       \[Api set: ExcelApi 1.1\]
    name: Excel.BindingCollection
    fullName: office.Excel_BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: office
    children:
      - office.Excel_BindingCollection.add
      - office.Excel_BindingCollection.addFromNamedItem
      - office.Excel_BindingCollection.addFromSelection
      - office.Excel_BindingCollection.count
      - office.Excel_BindingCollection.getCount
      - office.Excel_BindingCollection.getItem
      - office.Excel_BindingCollection.getItemAt
      - office.Excel_BindingCollection.getItemOrNullObject
      - office.Excel_BindingCollection.items
      - office.Excel_BindingCollection.load
      - office.Excel_BindingCollection.toJSON
  - uid: office.Excel_BindingCollection.add
    summary: |-
      Add a new binding to a particular Range. 

       \[Api set: ExcelApi 1.3\]
    name: 'add(range, bindingType, id)'
    fullName: office.Excel_BindingCollection.add
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Excel.Range | string, bindingType: string, id: string): Excel.Binding;'
      return:
        type:
          - Excel.Binding
        description: ''
      parameters:
        - id: range
          description: ''
          type:
            - Excel.Range | string
        - id: bindingType
          description: ''
          type:
            - string
        - id: id
          description: ''
          type:
            - string
  - uid: office.Excel_BindingCollection.addFromNamedItem
    summary: |-
      Add a new binding based on a named item in the workbook. 

       \[Api set: ExcelApi 1.3\]
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: office.Excel_BindingCollection.addFromNamedItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: string, id: string): Excel.Binding;'
      return:
        type:
          - Excel.Binding
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: bindingType
          description: ''
          type:
            - string
        - id: id
          description: ''
          type:
            - string
  - uid: office.Excel_BindingCollection.addFromSelection
    summary: |-
      Add a new binding based on the current selection. 

       \[Api set: ExcelApi 1.3\]
    name: 'addFromSelection(bindingType, id)'
    fullName: office.Excel_BindingCollection.addFromSelection
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: string, id: string): Excel.Binding;'
      return:
        type:
          - Excel.Binding
        description: ''
      parameters:
        - id: bindingType
          description: ''
          type:
            - string
        - id: id
          description: ''
          type:
            - string
  - uid: office.Excel_BindingCollection.count
    summary: |-
      Returns the number of bindings in the collection. Read-only. 

       \[Api set: ExcelApi 1.1\]
    name: count
    fullName: office.Excel_BindingCollection.count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'count: number;'
      return:
        type:
          - number
  - uid: office.Excel_BindingCollection.getCount
    summary: |-
      Gets the number of bindings in the collection. 

       \[Api set: ExcelApi 1.4\]
    name: getCount()
    fullName: office.Excel_BindingCollection.getCount
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: office.Excel_BindingCollection.getItem
    summary: |-
      Gets a binding object by ID. 

       \[Api set: ExcelApi 1.1\]
    name: getItem(id)
    fullName: office.Excel_BindingCollection.getItem
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - Excel.Binding
        description: ''
      parameters:
        - id: id
          description: ''
          type:
            - string
  - uid: office.Excel_BindingCollection.getItemAt
    summary: |-
      Gets a binding object based on its position in the items array. 

       \[Api set: ExcelApi 1.1\]
    name: getItemAt(index)
    fullName: office.Excel_BindingCollection.getItemAt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - Excel.Binding
        description: ''
      parameters:
        - id: index
          description: ''
          type:
            - number
  - uid: office.Excel_BindingCollection.getItemOrNullObject
    summary: |-
      Gets a binding object by ID. If the binding object does not exist, will return a null object. 

       \[Api set: ExcelApi 1.4\]
    name: getItemOrNullObject(id)
    fullName: office.Excel_BindingCollection.getItemOrNullObject
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - Excel.Binding
        description: ''
      parameters:
        - id: id
          description: ''
          type:
            - string
  - uid: office.Excel_BindingCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: office.Excel_BindingCollection.items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items: Array<Excel.Binding>;'
      return:
        type:
          - Array<Excel.Binding>
  - uid: office.Excel_BindingCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: office.Excel_BindingCollection.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: office.Excel_BindingCollection.toJSON
    name: toJSON()
    fullName: office.Excel_BindingCollection.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - "{\r\n            \"count\": number;\r\n        }"
        description: ''
