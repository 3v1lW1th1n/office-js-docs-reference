### YamlMime:UniversalReference
items:
  - uid: office.Word_List
    summary: |-
      Contains a collection of \[paragraph\](paragraph.md) objects. 

       \[Api set: WordApi 1.3\]
    name: Word_List
    fullName: office.Word_List
    langs:
      - typeScript
    type: class
    extends:
      - OfficeExtension.ClientObject
    package: office
    children:
      - office.Word_List.getLevelParagraphs
      - office.Word_List.getLevelString
      - office.Word_List.id
      - office.Word_List.insertParagraph
      - office.Word_List.levelExistences
      - office.Word_List.levelTypes
      - office.Word_List.load
      - office.Word_List.paragraphs
      - office.Word_List.setLevelAlignment
      - office.Word_List.setLevelBullet
      - office.Word_List.setLevelIndents
      - office.Word_List.setLevelNumbering
      - office.Word_List.setLevelStartingNumber
      - office.Word_List.toJSON
      - office.Word_List.track
      - office.Word_List.untrack
  - uid: office.Word_List.getLevelParagraphs
    summary: |-
      Gets the paragraphs that occur at the specified level in the list. 

       \[Api set: WordApi 1.3\]
    name: getLevelParagraphs(level)
    fullName: office.Word_List.getLevelParagraphs
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
  - uid: office.Word_List.getLevelString
    summary: |-
      Gets the bullet, number or picture at the specified level as a string. 

       \[Api set: WordApi 1.3\]
    name: getLevelString(level)
    fullName: office.Word_List.getLevelString
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
  - uid: office.Word_List.id
    summary: |-
      Gets the list's id. 

       \[Api set: WordApi 1.3\]
    name: id
    fullName: office.Word_List.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: number;'
      return:
        type:
          - number
  - uid: office.Word_List.insertParagraph
    summary: >-
      Inserts a paragraph at the specified location. The insertLocation value can be 'Start', 'End', 'Before' or
      'After'. 

       \[Api set: WordApi 1.3\]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: office.Word_List.insertParagraph
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: string): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: ''
          type:
            - string
        - id: insertLocation
          description: ''
          type:
            - string
  - uid: office.Word_List.levelExistences
    summary: >-
      Checks whether each of the 9 levels exists in the list. A true value indicates the level exists, which means there
      is at least one list item at that level. Read-only. 

       \[Api set: WordApi 1.3\]
    name: levelExistences
    fullName: office.Word_List.levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'levelExistences: Array<boolean>;'
      return:
        type:
          - Array<boolean>
  - uid: office.Word_List.levelTypes
    summary: |-
      Gets all 9 level types in the list. Each type can be 'Bullet', 'Number' or 'Picture'. Read-only. 

       \[Api set: WordApi 1.3\]
    name: levelTypes
    fullName: office.Word_List.levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'levelTypes: Array<string>;'
      return:
        type:
          - Array<string>
  - uid: office.Word_List.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    name: load(option)
    fullName: office.Word_List.load
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Word.List;'
      return:
        type:
          - Word.List
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[] | OfficeExtension.LoadOption'
  - uid: office.Word_List.paragraphs
    summary: |-
      Gets paragraphs in the list. Read-only. 

       \[Api set: WordApi 1.3\]
    name: paragraphs
    fullName: office.Word_List.paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
  - uid: office.Word_List.setLevelAlignment
    summary: |-
      Sets the alignment of the bullet, number or picture at the specified level in the list. 

       \[Api set: WordApi 1.3\]
    name: 'setLevelAlignment(level, alignment)'
    fullName: office.Word_List.setLevelAlignment
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
        - id: alignment
          description: ''
          type:
            - string
  - uid: office.Word_List.setLevelBullet
    summary: |-
      Sets the bullet format at the specified level in the list. If the bullet is 'Custom', the charCode is required. 

       \[Api set: WordApi 1.3\]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: office.Word_List.setLevelBullet
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: string, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
        - id: listBullet
          description: ''
          type:
            - string
        - id: charCode
          description: ''
          type:
            - number
        - id: fontName
          description: ''
          type:
            - string
  - uid: office.Word_List.setLevelIndents
    summary: |-
      Sets the two indents of the specified level in the list. 

       \[Api set: WordApi 1.3\]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: office.Word_List.setLevelIndents
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
        - id: textIndent
          description: ''
          type:
            - number
        - id: bulletNumberPictureIndent
          description: ''
          type:
            - number
  - uid: office.Word_List.setLevelNumbering
    summary: |-
      Sets the numbering format at the specified level in the list. 

       \[Api set: WordApi 1.3\]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: office.Word_List.setLevelNumbering
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumbering: string, formatString?: Array<any>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
        - id: listNumbering
          description: ''
          type:
            - string
        - id: formatString
          description: ''
          type:
            - Array<any>
  - uid: office.Word_List.setLevelStartingNumber
    summary: |-
      Sets the starting number at the specified level in the list. Default value is 1. 

       \[Api set: WordApi 1.3\]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: office.Word_List.setLevelStartingNumber
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: ''
          type:
            - number
        - id: startingNumber
          description: ''
          type:
            - number
  - uid: office.Word_List.toJSON
    name: toJSON()
    fullName: office.Word_List.toJSON
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON:'
      return:
        type:
          - "{\r\n            \"id\": number;\r\n            \"levelExistences\": boolean[];\r\n            \"levelTypes\": string[];\r\n        }"
        description: ''
  - uid: office.Word_List.track
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for context.trackedObjects.add(thisObject). If you are using this object across ".sync" calls and outside the
      sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a
      method on the object, you needed to have added the object to the tracked object collection when the object was
      first created.
    name: track()
    fullName: office.Word_List.track
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - Word.List
        description: ''
  - uid: office.Word_List.untrack
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects slows down the host application, so please
      remember to free any objects you add, once you're done using them. You will need to call "context.sync()" before
      the memory release takes effect.
    name: untrack()
    fullName: office.Word_List.untrack
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - Word.List
        description: ''
